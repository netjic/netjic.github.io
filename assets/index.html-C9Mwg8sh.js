import{_ as i,c as a,a as e,o as p}from"./app-DRG5qZNX.js";const t={};function n(o,l){return p(),a("div",null,l[0]||(l[0]=[e('<h2 id="_1-历史发展过程" tabindex="-1"><a class="header-anchor" href="#_1-历史发展过程"><span>1.历史发展过程</span></a></h2><ol><li><p>ASCII (American Standard Code for Information Interchange)</p><ul><li>只用7位二进制，最多表示128个字符</li><li>包含英文字母、数字、标点符号</li><li>示例：&#39;A&#39; = 65 = 0x41 = 0100 0001</li></ul></li><li><p>GB2312 (中国国标编码)</p><ul><li>支持中文字符</li><li>向下兼容 ASCII</li><li>使用两个字节表示一个汉字</li></ul></li><li><p>Unicode (统一码)</p><ul><li>包含世界上所有字符</li><li>每个字符都有唯一编号（码点）</li><li>示例：&#39;中&#39; = U+4E2D</li></ul></li></ol><h2 id="_2-字符集的本质" tabindex="-1"><a class="header-anchor" href="#_2-字符集的本质"><span>2.字符集的本质</span></a></h2><p>字符集就是把人类可读的符号（字符）映射为计算机可处理的数字：</p><p>ASCII 示例：</p><p>&#39;A&#39; -&gt; 65 (十进制) 或 0x41 (十六进制)</p><p>&#39;B&#39; -&gt; 66 (十进制) 或 0x42 (十六进制)</p><p>&#39;a&#39; -&gt; 97 (十进制) 或 0x61 (十六进制)</p><p>Unicode 示例：</p><p>&#39;中&#39; -&gt; 20013 (十进制) 或 0x4E2D (十六进制)</p><p>&#39;国&#39; -&gt; 22269 (十进制) 或 0x56FD (十六进制)</p><h2 id="_3-为什么需要这样的发展" tabindex="-1"><a class="header-anchor" href="#_3-为什么需要这样的发展"><span>3.为什么需要这样的发展</span></a></h2><p>ASCII的局限：</p><ul><li>只能表示128个字符</li><li>不支持其他语言</li></ul><p>GB2312的局限：</p><ul><li>只支持简体中文</li><li>不同国家有不同标准，容易混乱</li></ul><p>Unicode的优势：</p><ul><li>统一了所有字符编码</li><li>避免了字符集冲突</li><li>支持所有语言文字</li></ul><p>问题：ASCII 不够用！</p><ul><li>ASCII：一个字节(8位)，最多表示256个字符</li><li>中文：至少需要几万个字符</li><li>世界上：需要十几万个字符</li></ul><p>就像：</p><p>ASCII = 一个小村子的通讯录（够用）</p><p>Unicode = 全世界的通讯录（统一编号）</p><h2 id="_4-形象的比喻" tabindex="-1"><a class="header-anchor" href="#_4-形象的比喻"><span>4.形象的比喻</span></a></h2><p>就像密码本： ASCII码：</p><ul><li>只有英文的简单密码本</li><li>A -&gt; 65（十进制）</li><li>B -&gt; 66（十进制）</li></ul><p>Unicode：</p><ul><li>世界通用的大密码本</li><li>中 -&gt; 20013（十进制）</li><li>国 -&gt; 22269（十进制）</li></ul><p>UTF-8：</p><ul><li>是一种压缩规则</li><li>英文用1个字节</li><li>中文用3个字节</li></ul><h2 id="_5-为什么会出现乱码" tabindex="-1"><a class="header-anchor" href="#_5-为什么会出现乱码"><span>5.为什么会出现乱码？</span></a></h2><p>情况类比：</p><ul><li>用英语密码本解读中文密码</li><li>用中文密码本解读英文密码</li></ul><p>实际情况：</p><ul><li>用GBK解码UTF-8的文件</li><li>用UTF-8解码GBK的文件</li></ul><h2 id="_6-utf-8-实际存储方案" tabindex="-1"><a class="header-anchor" href="#_6-utf-8-实际存储方案"><span>6.UTF-8（实际存储方案）</span></a></h2><p>特点：可变长度编码</p><ul><li>英文字母：1个字节</li><li>欧洲文字：2个字节</li><li>中文字符：3个字节</li><li>特殊字符：4个字节</li></ul><p>例如存储&quot;A中&quot;： A -&gt; 41 (1个字节，16进制) 中 -&gt; E4 B8 AD (3个字节，16进制)</p><p>完整文件内容：41 E4 B8 AD</p><h2 id="_7-存储过程比喻-utf-8" tabindex="-1"><a class="header-anchor" href="#_7-存储过程比喻-utf-8"><span>7.存储过程比喻（utf-8）</span></a></h2><p>写入过程像这样：</p><ol><li>你写下&quot;A中&quot;</li><li>电脑查字典： <ul><li>A -&gt; 65 -&gt; 41(一个字节，16进制)</li><li>中 -&gt; 20013 -&gt; E4 B8 AD(三个字节，16进制)</li></ul></li><li>存入文件：41 E4 B8 AD</li></ol><p>读取过程像这样：</p><ol><li>读取字节：41 E4 B8 AD</li><li>电脑解码： <ul><li>41 -&gt; A</li><li>E4 B8 AD -&gt; 中</li></ul></li><li>显示：&quot;A中&quot;</li></ol><h2 id="_8-unicode和utf-8的关系" tabindex="-1"><a class="header-anchor" href="#_8-unicode和utf-8的关系"><span>8.Unicode和utf-8的关系</span></a></h2><p>Unicode 本身是字符集，定义了字符与编号的对应关系，具体实现有 UTF-8、UTF-16、UTF-32 等不同编码方式</p><p>写入文件时：</p><ol><li>字符 -&gt; 查Unicode字典得到编号 -&gt; 用UTF-8规则转换 -&gt; 存储</li></ol><p>读取文件时：</p><ol><li><p>读取字节 -&gt; 用UTF-8规则解码得到Unicode编号 -&gt; 显示对应字符</p></li><li><p>Unicode 就是一个大字典，给每个字符一个唯一的编号</p></li><li><p>UTF-8 是一种存储这些编号的聪明方法：</p><ul><li>常用的字符（如英文）用一个字节</li><li>不常用的字符（如中文）用多个字节</li></ul></li><li><p>它们的关系就像：</p><ul><li>Unicode 是图书馆的编目系统</li><li>UTF-8 是实际的图书摆放方法</li></ul></li></ol><p>这样设计的好处是：</p><ol><li>Unicode 保证每个字符都有唯一编号</li><li>UTF-8 让存储更节省空间(Unicode 需要固定4字节)</li><li>软件知道如何通过 UTF-8 的格式找到正确的 Unicode 编号</li></ol><p>Unicode 有几种不同的实现方式：</p><p>UTF-16（Java 内部使用）:</p><ul><li>基本平面字符：2个字节</li><li>扩展平面字符：4个字节</li></ul><p>UTF-32:</p><ul><li>固定使用4个字节</li><li>浪费空间但处理简单</li></ul><p>UTF-8（文件存储常用）:</p><ul><li>ASCII字符：1个字节</li><li>欧洲字符：2个字节</li><li>中文字符：3个字节</li><li>特殊字符：4个字节</li></ul>',60)]))}const c=i(t,[["render",n],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/0zoayoa7/","title":"文件字符编码","lang":"zh-CN","frontmatter":{"title":"文件字符编码","createTime":"2025/01/16 15:11:01","permalink":"/article/0zoayoa7/"},"headers":[],"readingTime":{"minutes":3.45,"words":1034},"git":{"updatedTime":1737376519000,"contributors":[{"name":"netjic","username":"netjic","email":"netjic@163.com","commits":2,"avatar":"https://gravatar.com/avatar/374578fe375437866193fe849b770e3f9c74eacc1a7125303870c05b7a97309d?d=retro"}]},"filePathRelative":"计算机/文件字符编码.md","categoryList":[{"id":"8a2b56","sort":10014,"name":"计算机"}],"bulletin":false}');export{c as comp,r as data};
