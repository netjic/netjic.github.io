import{_ as s,c as a,a as n,o as l}from"./app-CNZkbZ7y.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<h2 id="什么是会话" tabindex="-1"><a class="header-anchor" href="#什么是会话"><span>什么是会话？</span></a></h2><p>在Web应用中，“会话”是指一个特定用户与服务器之间的交互过程。由于HTTP协议本身是无状态的（即每次请求都是独立的），为了维护用户的状态信息（例如登录状态、购物车内容等），Web应用使用了会话机制。会话通常通过以下方式之一来实现：</p><ul><li>Session ID：当用户首次访问网站时，服务器生成一个唯一的Session ID，并将其返回给客户端（通常是通过Cookie）。之后，客户端会在每个请求中携带这个Session ID，使服务器能够识别用户并恢复其会话状态。</li><li>Cookies：大多数情况下，Session ID是通过名为JSESSIONID的Cookie存储在客户端的浏览器中。</li></ul><h2 id="整个会话期间的理解" tabindex="-1"><a class="header-anchor" href="#整个会话期间的理解"><span>整个会话期间的理解</span></a></h2><ol><li>开始时间：</li></ol><ul><li>当用户首次访问你的Web应用程序时，如果应用程序配置为创建会话（比如当用户登录或添加商品到购物车时），则会启动一个新的会话。此时，服务器会创建一个HttpSession对象，并分配一个唯一的Session ID。</li></ul><ol start="2"><li>持续时间：</li></ol><ul><li>一旦会话被创建，只要用户保持活动（即继续发送带有有效Session ID的请求），并且会话没有因为超时等原因而失效，那么该会话就一直存在。</li><li>如果一段时间内没有任何请求到达服务器（超过设定的最大不活跃时间），服务器可能会自动销毁会话以释放资源。这被称为会话超时。</li></ul><ol start="3"><li>结束时间：</li></ol><ul><li>用户可以主动终止会话，例如通过点击注销按钮，这通常会导致服务器调用session.invalidate()方法来明确地销毁会话。</li><li>另一种情况是，如果会话超时（即超过了配置的最大不活跃时间），服务器也会自动销毁会话。</li><li>浏览器关闭后，除非设置了持久化Cookie，否则默认情况下浏览器端的Session ID Cookie会被删除，但服务器端的会话可能仍然存在，直到超时为止。</li></ul><h2 id="在spring中的会话作用域bean" tabindex="-1"><a class="header-anchor" href="#在spring中的会话作用域bean"><span>在Spring中的会话作用域Bean</span></a></h2><p>在Spring框架中，如果你定义了一个会话作用域的Bean，那么这个Bean的生命周期将与用户的HTTP会话同步：</p><ul><li>创建：当用户首次访问应用（更准确地说，是首次访问触发了对该Bean的需求）时，Spring容器会为当前会话创建一个新的Bean实例。</li><li>使用：在同一个会话内的所有后续请求中，都会使用同一个Bean实例，允许跨请求共享状态。</li><li>销毁：当会话结束（无论是通过用户注销还是由于会话超时），Spring容器会自动销毁这个Bean实例。</li></ul><p>使用会话作用域的Bean来存储购物车数据：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> org</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">springframework</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">context</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">annotation</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> org</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">springframework</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">stereotype</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">Component</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Component</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">Scope</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">session</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> proxyMode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> ScopedProxyMode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">TARGET_CLASS</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> ShoppingCart</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 购物车逻辑</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> addItem</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">String </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Item added: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> item</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> checkout</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Checkout process initiated</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ShoppingCart</code> Bean的作用域被设置为<code>session</code>，这意味着每个用户的会话都会拥有自己的<code>ShoppingCart</code>实例。 <code>proxyMode = ScopedProxyMode.TARGET_CLASS</code>确保了即使在单例Bean中注入此会话作用域的Bean也能正常工作。</p>`,16)]))}const p=s(e,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/7f4lira0/","title":"会话","lang":"zh-CN","frontmatter":{"title":"会话","createTime":"2025/03/13 12:02:22","permalink":"/article/7f4lira0/"},"headers":[],"readingTime":{"minutes":2.81,"words":844},"git":{"updatedTime":1748077734000,"contributors":[{"name":"netjic","username":"netjic","email":"netjic@163.com","commits":1,"avatar":"https://gravatar.com/avatar/374578fe375437866193fe849b770e3f9c74eacc1a7125303870c05b7a97309d?d=retro"}]},"filePathRelative":"springboot/会话.md","categoryList":[{"id":"d164d9","sort":10010,"name":"springboot"}],"bulletin":false}');export{p as comp,r as data};
