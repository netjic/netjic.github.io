import{_ as i,c as a,a as n,o as l}from"./app-ffNMeUsk.js";const e={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="根据坐标创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#根据坐标创建-maven-工程"><span>根据坐标创建 Maven 工程</span></a></h2><h3 id="maven中的坐标" tabindex="-1"><a class="header-anchor" href="#maven中的坐标"><span>Maven中的坐标</span></a></h3><ol><li>向量说明 使用三个『向量』在『Maven的仓库』中唯一的定位到一个『jar』包。</li></ol><ul><li>groupId：公司或组织的 id</li><li>artifactId：一个项目或者是项目中的一个模块的 id(更偏向于项目中的一个模块或一个没有进行拆分的项目)</li><li>version：版本号</li></ul><p>一个公司中有多个项目，每个项目中有多个工程</p><p>一个项目在实现的时候，会拆分出多个模块，每个模块是一个工程</p><ol start="2"><li>三个向量的取值方式</li></ol><ul><li>groupId：公司或组织域名的倒序，通常也会加上项目名称(为了区别项目这一层) <ul><li>例如：com.atguigu.maven</li></ul></li><li>artifactId：模块的名称，将来作为 Maven 工程的工程名</li><li>version：模块的版本号，根据自己的需要设定 <ul><li>例如：SNAPSHOT 表示快照版本，正在迭代过程中，不稳定的版本</li><li>例如：RELEASE 表示正式版本</li></ul></li></ul><h3 id="坐标和仓库中-jar-包的存储路径之间的对应关系" tabindex="-1"><a class="header-anchor" href="#坐标和仓库中-jar-包的存储路径之间的对应关系"><span>坐标和仓库中 jar 包的存储路径之间的对应关系</span></a></h3><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">javax.servlet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">groupId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">servlet-api</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">artifactId</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">2.5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">version</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面坐标对应的 jar 包在 Maven 本地仓库中的位置： <code>Maven本地仓库根目录\\javax\\servlet\\servlet-api\\2.5\\servlet-api-2.5.jar</code></p><h2 id="mvn创建项目" tabindex="-1"><a class="header-anchor" href="#mvn创建项目"><span>mvn创建项目</span></a></h2><p>运行 mvn archetype:generate 命令</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">3517:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> remote</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> -</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> za.co.absa.hyperdrive:component-archetype_2.12</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (-)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Choose</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> number</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> or</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> apply</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> filter</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (format: [groupId:]artifactId, case sensitive contains): 2211: 7</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Choose</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> am.ik.archetype:mvc-1.0-blank-archetype</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> version:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">1:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.0.0-m01</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">2:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.0.0-m02</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Choose</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> number:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 2:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Define</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> value</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> property</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">groupId</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.netjic.maven</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Define</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> value</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> property</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">artifactId</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> maven</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Define</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> value</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> property</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">version</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.0-SNAPSHOT:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Define</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> value</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> for</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> property</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">package</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.netjic.maven:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Confirm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> properties</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> configuration:</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">groupId:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.netjic.maven</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">artifactId:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> maven</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">version:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1.0-SNAPSHOT</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">package:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> com.netjic.maven</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> Y:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="maven核心概念-pom" tabindex="-1"><a class="header-anchor" href="#maven核心概念-pom"><span>Maven核心概念：POM</span></a></h2><ol><li><p>含义</p><p>POM：Project Object Model，项目对象模型。和 POM 类似的是：DOM（Document Object Model），文档对象模型。它们都是模型化思想的具体体现。</p></li><li><p>模型化思想</p></li></ol><p>POM 表示将工程抽象为一个模型，再用程序中的对象来描述这个模型。这样我们就可以用程序来管理项目了。我们在开发过程中，最基本的做法就是将现实生活中的事物抽象为模型，然后封装模型相关的数据作为一个对象，这样就可以在程序中计算与现实事物相关的数据。 3. 对应的配置文件</p><p>POM 理念集中体现在 Maven 工程根目录下 pom.xml 这个配置文件中。所以这个 pom.xml 配置文件就是 Maven 工程的核心配置文件。其实学习 Maven 就是学这个文件怎么配置，各个配置有什么用。</p><h2 id="maven核心概念-约定的目录结构" tabindex="-1"><a class="header-anchor" href="#maven核心概念-约定的目录结构"><span>Maven核心概念：约定的目录结构</span></a></h2><ol><li>各个目录的左右</li></ol><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>maven</span></span>
<span class="line"><span>├── src</span></span>
<span class="line"><span>│   ├── main</span></span>
<span class="line"><span>│   │   ├── java</span></span>
<span class="line"><span>│   │   │   └── com</span></span>
<span class="line"><span>│   │   └── resources</span></span>
<span class="line"><span>│   └── test</span></span>
<span class="line"><span>│       ├── java</span></span>
<span class="line"><span>│       │   └── com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>src：源代码目录 <ul><li>main：主体程序目录 <ul><li>java：Java源代码目录 <ul><li>com：package目录</li></ul></li><li>resources：配置文件目录</li></ul></li><li>test：测试程序目录 <ul><li>java：测试Java源代码目录 <ul><li>com：测试package目录</li></ul></li></ul></li></ul></li></ul><p>另外还有一个 target 目录专门存放构建操作输出的结果。</p><ol start="2"><li>约定目录结构的意义</li></ol><p>Maven 为了让构建过程能够尽可能自动化完成，所以必须约定目录结构的作用。例如：Maven 执行编译操作，必须先去 Java 源程序目录读取 Java 源代码，然后执行编译，最后把编译结果存放在 target 目录。</p><ol start="3"><li>约定大于配置</li></ol><p>Maven 对于目录结构这个问题，没有采用配置的方式，而是基于约定。这样会让我们在开发过程中非常方便。如果每次创建 Maven 工程后，还需要针对各个目录的位置进行详细的配置，那肯定非常麻烦。</p><p>目前开发领域的技术发展趋势就是：约定大于配置，配置大于编码。</p><h2 id="在-maven-工程中编写代码" tabindex="-1"><a class="header-anchor" href="#在-maven-工程中编写代码"><span>在 Maven 工程中编写代码</span></a></h2><p>主体程序指的是被测试的程序，同时也是将来在项目中真正要使用的程序。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">package</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> com</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">netjic</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">maven</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Calculator</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">  public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sum</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> j</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">){</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">    return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> j</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行-maven-的构建命令" tabindex="-1"><a class="header-anchor" href="#执行-maven-的构建命令"><span>执行 Maven 的构建命令</span></a></h2><p>运行 Maven 中和构建操作相关的命令时，必须进入到 pom.xml 所在的目录。</p><ol><li><p>清理操作</p><p>mvn clean</p><p>效果：删除 target 目录</p></li><li><p>编译操作</p><p>主程序编译：mvn compile</p><p>测试程序编译：mvn test-compile</p><p>主体程序编译结果存放的目录：target/classes</p><p>测试程序编译结果存放的目录：target/test-classes</p></li><li><p>测试操作</p><p>mvn test</p><p>测试的报告存放的目录：target/surefire-reports</p><blockquote><p>进行测试操作，Maven会自动执行主程序和测试程序的编译操作</p></blockquote></li><li><p>打包操作</p><p>mvn package</p><p>打包的结果——jar 包，存放的目录：target</p><blockquote><p>进行打包操作，Maven会自动执行主程序和测试程序的编译操作，以及测试程序的允许</p></blockquote></li><li><p>安装操作</p><p>mvn install</p><p>安装的效果是将本地构建过程中生成的 jar 包存入 Maven 本地仓库。这个 jar 包在 Maven 仓库中的路径是根据它的坐标生成的。</p><blockquote><p>命令可以组合执行，如 mvn clean install 相当于清理操作和安装操作同时执行</p></blockquote></li></ol>`,34)]))}const k=i(e,[["render",p],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/article/7s614s5l/","title":"使用Maven","lang":"zh-CN","frontmatter":{"title":"使用Maven","createTime":"2025/01/17 11:23:26","permalink":"/article/7s614s5l/"},"headers":[],"readingTime":{"minutes":4.32,"words":1296},"git":{"updatedTime":1737376519000,"contributors":[{"name":"netjic","username":"netjic","email":"netjic@163.com","commits":2,"avatar":"https://gravatar.com/avatar/374578fe375437866193fe849b770e3f9c74eacc1a7125303870c05b7a97309d?d=retro"}]},"filePathRelative":"notes/maven/使用Maven.md","categoryList":[{"id":"4358b5","sort":10015,"name":"notes"},{"id":"29a1ea","sort":10018,"name":"maven"}],"bulletin":false}');export{k as comp,r as data};
