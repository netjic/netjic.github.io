import{_ as i,c as l,a as e,o as a}from"./app-CNZkbZ7y.js";const n={};function t(h,s){return a(),l("div",null,s[0]||(s[0]=[e(`<ol><li>Shell的继承关系</li></ol><p>环境变量加载到当前shell</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 登录shell (比如你刚打开终端)</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">login</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> shell</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  └──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 读取</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/profile</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">      └──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 读取</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bash_profile</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 或</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.profile</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">          └──</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 读取</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ~/.bashrc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>环境变量的生效方式</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 修改 profile 文件</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">vim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/profile</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">export</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> PATH</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">$PATH</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">:/</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">new</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">/</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 这时新的PATH并未在当前shell中生效</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">echo</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> $PATH</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  # 还是旧的值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>为什么需要 source</li></ol><p>原因：</p><ol><li>Shell的独立性：</li></ol><ul><li>每个 shell 都是独立的进程</li><li>修改配置文件不会自动影响已运行的 shell</li></ul><ol start="2"><li>配置文件的加载时机：</li></ol><ul><li>/etc/profile 只在登录时被读取</li><li>修改后不会自动重新加载</li></ul><ol start="4"><li>source 的作用</li></ol><blockquote><p>使用在脚本路径前加“.”或者 source 的方式，可以使脚本内容在当前shell 里执行，而无需打开子 shell！ 开子 shell 与不开子 shell 的区别就在于，环境变量的继承关系，如在子 shell 中设置的当前变量，父 shell 是不可见的。 source之后，这些环境变量在当前shell中就可以使用了（export命令）</p></blockquote><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 这两个命令效果相同</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">source</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/profile</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">.</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> /etc/profile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 它们会在当前shell中执行配置文件</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># 而不是创建新的子shell</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const r=i(n,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/article/lui8niqg/","title":"为什么修改完etc下的profile要source","lang":"zh-CN","frontmatter":{"title":"为什么修改完etc下的profile要source","createTime":"2025/01/08 16:20:22","permalink":"/article/lui8niqg/"},"headers":[],"readingTime":{"minutes":1.11,"words":333},"git":{"updatedTime":1736409960000,"contributors":[{"name":"netjic","username":"netjic","email":"netjic@163.com","commits":2,"avatar":"https://gravatar.com/avatar/374578fe375437866193fe849b770e3f9c74eacc1a7125303870c05b7a97309d?d=retro"}]},"filePathRelative":"linux/为什么修改完etc下的profile要source.md","categoryList":[{"id":"e206a5","sort":10005,"name":"linux"}],"bulletin":false}');export{r as comp,d as data};
